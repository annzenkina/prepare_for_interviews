<?xml version="1.0" encoding="UTF-8"?>
<svg viewBox="0 0 900 700" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .clock-box { fill: #f0f8ff; stroke: #4682b4; stroke-width: 2; }
      .step-box { fill: #e6f3ff; stroke: #333; stroke-width: 1; }
      .title { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; text-anchor: middle; }
      .step-title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; }
      .text { font-family: Arial, sans-serif; font-size: 12px; text-anchor: start; }
      .center-text { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; }
      .arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .time-arrow { stroke: #ff6b6b; stroke-width: 3; fill: none; marker-end: url(#redarrow); }
      .example { font-family: Arial, sans-serif; font-size: 10px; fill: #666; }
      .highlight { fill: #ffeb3b; stroke: #f57f17; stroke-width: 2; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
    <marker id="redarrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#ff6b6b" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="450" y="30" class="title">Discrete Clock Simulation Flow</text>
  
  <!-- Clock Ticker -->
  <rect x="350" y="50" width="200" height="60" class="highlight" />
  <text x="450" y="75" class="step-title">CLOCK TICK</text>
  <text x="450" y="95" class="center-text">current_time += 1</text>
  
  <!-- Main Flow Steps -->
  
  <!-- Step 1: Check & Assign -->
  <rect x="50" y="150" width="150" height="80" class="step-box" />
  <text x="125" y="175" class="step-title">1. ASSIGN</text>
  <text x="60" y="195" class="text">‚Ä¢ Check free workers</text>
  <text x="60" y="210" class="text">‚Ä¢ Assign pending tasks</text>
  <text x="60" y="225" class="text">‚Ä¢ Update worker state</text>
  
  <!-- Step 2: Advance Time -->
  <rect x="250" y="150" width="150" height="80" class="step-box" />
  <text x="325" y="175" class="step-title">2. ADVANCE</text>
  <text x="260" y="195" class="text">‚Ä¢ All workers.advance_time</text>
  <text x="260" y="210" class="text">‚Ä¢ Collect finished tasks</text>
  <text x="260" y="225" class="text">‚Ä¢ Free up workers</text>
  
  <!-- Step 3: Report -->
  <rect x="450" y="150" width="150" height="80" class="step-box" />
  <text x="525" y="175" class="step-title">3. REPORT</text>
  <text x="460" y="195" class="text">‚Ä¢ Show current state</text>
  <text x="460" y="210" class="text">‚Ä¢ Print worker status</text>
  <text x="460" y="225" class="text">‚Ä¢ Log completions</text>
  
  <!-- Step 4: Continue? -->
  <rect x="650" y="150" width="150" height="80" class="step-box" />
  <text x="725" y="175" class="step-title">4. CONTINUE?</text>
  <text x="660" y="195" class="text">‚Ä¢ Any tasks pending?</text>
  <text x="660" y="210" class="text">‚Ä¢ Any workers busy?</text>
  <text x="660" y="225" class="text">‚Ä¢ If yes ‚Üí next tick</text>
  
  <!-- Arrows between steps -->
  <line x1="200" y1="190" x2="250" y2="190" class="arrow" />
  <line x1="400" y1="190" x2="450" y2="190" class="arrow" />
  <line x1="600" y1="190" x2="650" y2="190" class="arrow" />
  
  <!-- Clock advancement arrow -->
  <line x1="450" y1="110" x2="450" y2="140" class="time-arrow" />
  
  <!-- Detailed Example Timeline -->
  <text x="450" y="290" class="title">Example: Processing Queue [A:3, B:2, C:4, D:1] with 2 Workers</text>
  
  <!-- Time 0 -->
  <rect x="50" y="320" width="120" height="100" class="clock-box" />
  <text x="110" y="340" class="step-title">TIME 0</text>
  <text x="60" y="360" class="text">Queue: [A,B,C,D]</text>
  <text x="60" y="375" class="text">Worker1: FREE</text>
  <text x="60" y="390" class="text">Worker2: FREE</text>
  <text x="60" y="405" class="text">‚Üí Assign A,B</text>
  
  <!-- Time 1 -->
  <rect x="190" y="320" width="120" height="100" class="clock-box" />
  <text x="250" y="340" class="step-title">TIME 1</text>
  <text x="200" y="360" class="text">Queue: [C,D]</text>
  <text x="200" y="375" class="text">Worker1: A(2s left)</text>
  <text x="200" y="390" class="text">Worker2: B(1s left)</text>
  <text x="200" y="405" class="text">‚Üí Both advance</text>
  
  <!-- Time 2 -->
  <rect x="330" y="320" width="120" height="100" class="clock-box" />
  <text x="390" y="340" class="step-title">TIME 2</text>
  <text x="340" y="360" class="text">Queue: [C,D]</text>
  <text x="340" y="375" class="text">Worker1: A(1s left)</text>
  <text x="340" y="390" class="text">Worker2: B finished!</text>
  <text x="340" y="405" class="text">‚Üí Assign C to W2</text>
  
  <!-- Time 3 -->
  <rect x="470" y="320" width="120" height="100" class="clock-box" />
  <text x="530" y="340" class="step-title">TIME 3</text>
  <text x="480" y="360" class="text">Queue: [D]</text>
  <text x="480" y="375" class="text">Worker1: A finished!</text>
  <text x="480" y="390" class="text">Worker2: C(2s left)</text>
  <text x="480" y="405" class="text">‚Üí W1 becomes free</text>
  
  <!-- Arrows between time steps -->
  <line x1="170" y1="370" x2="190" y2="370" class="time-arrow" />
  <line x1="310" y1="370" x2="330" y2="370" class="time-arrow" />
  <line x1="450" y1="370" x2="470" y2="370" class="time-arrow" />
  
  <!-- Key Properties -->
  <rect x="50" y="450" width="800" height="120" class="step-box" />
  <text x="450" y="475" class="title">Key Properties of Discrete Clock</text>
  
  <text x="70" y="500" class="text">üïê <tspan font-weight="bold">Synchronous:</tspan> All workers advance at the same time</text>
  <text x="70" y="520" class="text">‚ö° <tspan font-weight="bold">Atomic:</tspan> State changes happen instantly at each tick</text>
  <text x="70" y="540" class="text">üìä <tspan font-weight="bold">Observable:</tspan> We can inspect system state at any time</text>
  <text x="70" y="560" class="text">üîÑ <tspan font-weight="bold">Deterministic:</tspan> Same input always produces same output</text>
  
  <!-- Implementation Note -->
  <rect x="620" y="320" width="230" height="100" class="highlight" />
  <text x="735" y="340" class="step-title">Implementation</text>
  <text x="630" y="360" class="example">while has_work?</text>
  <text x="630" y="375" class="example">  assign_tasks</text>
  <text x="630" y="390" class="example">  workers.each(&:advance_time)</text>
  <text x="630" y="405" class="example">  report_state</text>
  <text x="630" y="420" class="example">end</text>
</svg> 